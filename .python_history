import gtts
tts = gtts("hello")
tts = gTTS("hello")
import gtts
gdds.dir
dir gtts
dir(gtts)
tts = gtts("hello")
tts = gTTS("hello")
gTTS()
gtts
gtts()
import gtts as gtts
gtts
gtts()
from gtts import gTTS
tts = gTTS('hello', lang='en')
tts.save('hello.mp3')
quit()
from gtts import gTTS
say="hello"
tts = gTTS(say,lang='en')
fname=hashlib.md5(say.encode()).hexdigest()+".mp3"
import hashlib
fname=hashlib.md5(say.encode()).hexdigest()+".mp3"
fname
 tts.save("/var/www/html/mp3_cache/"+fname)
tts.save("/var/www/html/mp3_cache/"+fname)
 tts.save("/tmp/"+fname)
tts.save("/tmp/"+fname)
quit()
import time
import pychromecast
chromecasts = pychromecast.get_chromecasts()
print chromecasts
print(chromecasts)
[cc.device.friendly_name for cc in chromecasts]
from pychromecast.controllers import BaseController
class MyController(BaseController):
    def __init__(self):
        super(MyController, self).__init__(
            "urn:x-cast:my.super.awesome.namespace")
    def receive_message(self, message, data):
        print("Wow, I received this message: {}".format(data))
        return True  # indicate you handled this message
    def request_beer(self):
        self.send_message({'request': 'beer'})
\q
quit()
